Tower of Hanoi Notes:

8-30-21

X ISSUE: Move History does not expand when already open and new items are added.
SOLUTION: Set max-height of element whenever new item is added. Logic is already used
when accordion is toggled open/close.

- ISSUE: Once auto solution has started and stopped. Clicking 'play' again resets the puzzle because
user moves are not accounted for when auto solving so it needs to be reset in case the user made their own
moves. Button for 'Play' should be changed to 'Reset'.
SOLUTION: Use state for puzzle that tracks whether the solution is in a state where auto solve can continue
OR in a state where the user is making moves and auto solve needs to reset the puzzle before beginning.

- Add option to solve dropdown to change delay between moves.
SOLUTION: When value is changed, current interval must be cleared before a new interval is started with new
delay.

8-18-21

X Add circle with question mark that shows modal of tips when clicked or hovered over.

- Puzzle States:
	- Complete (puzzle is complete)
	- Default/Initial (disks on first rod)
	- Playing (intermediate state between initial/default with no moves and puzzle complete)
	- Solving (puzzle is auto solving and playing entire solution)

8-16-21

X Add message field:
	- Not Valid Move
	- Puzzle Completed in N Moves!
	- Disk Moved From Rod N to Rod N
	- Undo Prev Move
	- Puzzle Reset

X Display each move in Move History
	A -> B
	A -> C
	B -> C

X Add input for the number of disks to use

8-12-21

X Add Solve dropdown with options to change delay between moves, 'Solve' button or 'Play', 'Stop' button (clears interval when clicked), 
ability to step through solution move by move instead of playing automatically.

X Style radio buttons and label to be horizontal instead of vertical.

X Add 'Reset' button

X ISSUE: If animation is playing and Reset button is pressed, animation restarts from the beginning.
SOLUTION: Use state interval that can be cleared when reset

Pre 8-12-21

Class: TowerOfHanoi
	rods = Rods[] (indices from left to right)
	move(initialRod, finalRod) (moves disk from top of initial rod to top of final rod, checking if valid move first)

Class: Rod
	disks = Disk[] (0 index is disk at bottom of rod)

Class: Disk

- Rod Height should be one disk height (+ padding) less than the full canvas height. Allows minimum room to animate disk up and over to new rod.

Disk Min Width - RodWidth(+pad)
Disk Max Width - 0.3 * CanvasWidth

nDisks		Widths
3		0 - 0 - DiskMaxWidth